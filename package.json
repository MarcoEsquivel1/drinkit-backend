{
  "name": "dinkit-backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "start:pm2": "pm2 start dist/main.js -i max --name dinkit_api",
    "restart": "pm2 reload dinkit_api --update-env",
    "stop": "pm2 stop dinkit_api",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "typeorm-ts-node-commonjs",
    "typeorm:drop": "typeorm-ts-node-commonjs schema:drop -d ./src/shared/infrastructure/config/typeorm.config.ts",
    "typeorm:drop:test": "dotenv -e .env.test typeorm-ts-node-commonjs schema:drop -d ./src/shared/infrastructure/config/typeorm.config.ts",
    "migration:generate": "typeorm-ts-node-commonjs migration:generate",
    "migration:run": "typeorm-ts-node-commonjs migration:run",
    "migration:revert": "typeorm-ts-node-commonjs migration:revert",
    "migrations": "typeorm-ts-node-commonjs migration:run -d ./src/shared/infrastructure/config/typeorm.config.ts",
    "migrations:custom": "ts-node -r tsconfig-paths/register ./src/run-migrations.ts",
    "migrations:create": "f() { typeorm-ts-node-commonjs migration:create ./src/shared/infrastructure/database/migrations/\"${1:-new-migration}\"; }; f",
    "migrations:revert": "typeorm-ts-node-commonjs migration:revert -d ./src/shared/infrastructure/config/typeorm.config.ts",
    "migrations:generate": "f() { typeorm-ts-node-commonjs migration:generate -d ./src/shared/infrastructure/config/typeorm.config.ts ./src/shared/infrastructure/database/migrations/\"${1:-generated}\"; }; f",
    "migrations:test": "dotenv -e .env.test typeorm-ts-node-commonjs migration:run -d ./src/shared/infrastructure/config/typeorm.config.ts",
    "migrations:test:revert": "dotenv -e .env.test typeorm-ts-node-commonjs migration:revert -d ./src/shared/infrastructure/config/typeorm.config.ts",
    "schema:sync": "typeorm-ts-node-commonjs schema:sync",
    "seeds": "ts-node -r tsconfig-paths/register ./src/shared/infrastructure/database/seeds/run-seeders.ts",
    "seeds:test": "dotenv -e .env.test yarn run seeds"
  },
  "dependencies": {
    "@jorgebodega/typeorm-seeding": "^7.1.0",
    "@logtail/node": "^0.5.5",
    "@nestjs/axios": "^4.0.0",
    "@nestjs/bull": "^11.0.2",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.1.3",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.3",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/mongoose": "^11.0.3",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.3",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/serve-static": "^5.0.3",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/throttler": "^6.4.0",
    "@nestjs/typeorm": "^11.0.0",
    "@sendgrid/mail": "^8.1.5",
    "@types/uuid": "^10.0.0",
    "axios": "^1.10.0",
    "bcrypt": "^6.0.0",
    "bull": "^4.16.5",
    "cache-manager": "^7.0.1",
    "cache-manager-ioredis-yet": "^2.1.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "crypto-js": "^4.2.0",
    "csv-parser": "^3.2.0",
    "currency.js": "^2.0.4",
    "easy-html-to-pdf": "^1.0.1",
    "ejs": "^3.1.10",
    "express": "^5.1.0",
    "helmet": "^8.1.0",
    "http-errors": "^2.0.0",
    "imagekit": "^6.0.0",
    "ioredis": "^5.6.1",
    "joi": "^17.13.3",
    "json2csv": "^6.0.0-alpha.2",
    "keyv": "^5.3.4",
    "lodash": "^4.17.21",
    "messagebird": "^4.0.1",
    "moment-timezone": "^0.6.0",
    "mongoose": "^8.16.3",
    "multer": "^2.0.1",
    "mustache": "^4.2.0",
    "nodemailer": "^7.0.5",
    "passport": "^0.7.0",
    "passport-custom": "^1.1.1",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "permissions-policy": "^0.6.0",
    "pg": "^8.16.3",
    "pug": "^3.0.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "streamify-string": "^1.0.1",
    "swagger-ui-express": "^5.0.1",
    "tslib": "^2.8.1",
    "twilio": "^5.7.2",
    "typeorm": "^0.3.25",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/bcrypt": "^5.0.2",
    "@types/bull": "^4.10.4",
    "@types/crypto-js": "^4.2.2",
    "@types/ejs": "^3.1.5",
    "@types/express": "^5.0.3",
    "@types/http-errors": "^2",
    "@types/ioredis": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/joi": "^17.2.3",
    "@types/json2csv": "^5.0.7",
    "@types/lodash": "^4",
    "@types/moment-timezone": "^0.5.30",
    "@types/multer": "^2.0.0",
    "@types/mustache": "^4.2.6",
    "@types/node": "^24.0.13",
    "@types/nodemailer": "^6.4.17",
    "@types/passport": "^1.0.17",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/pg": "^8.15.4",
    "@types/streamify-string": "^1",
    "@types/supertest": "^6.0.2",
    "@yarnpkg/pnpify": "^4.0.1",
    "dotenv": "^17.2.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "pm2": "^6.0.8",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
